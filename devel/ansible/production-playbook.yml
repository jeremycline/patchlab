---


# Supported variables:
#
# vault_patchwork_secret_key: A long random string
# vault_patchlab_gitlab_webhook_secret: A long random string used to authenticate GitLab webhooks
# vault_gitlab_private_token: A GitLab API token
# vault_imap_password: Password fetchmail should use for IMAP access
# vault_patchwork_database_password: A long random string
# patchlab_fqdn: The fully-qualified domain name to use when serving
# patchwork_email_host: SMTP server to send mail from
# patchwork_email_port: The port to use for SMTP (probably 587)
# patchwork_email_user: SMTP username
# patchwork_email_password: SMTP password
# patchwork_default_from_email: Email address to use as the default for emails sent in Django
# patchlab_from_email: Email to use when bridging patches.
# imap_host: IMAP host for fetchmail to use
# imap_port: Port for fetchmail to use
# imap_user: IMAP user
# bridged_list_id: The List-ID being bridged. Necessary as if you're subscribed to the list and Cc'd, Gmail will deduplicate the copies and likely you'll get the non-list copy first
# letsencrypt_email: Email for letencrypt to send important notifications
# imap_folder: Folder to fetch for patches; defaults to INBOX
# patchlab_version: Version of patchlab to install, see https://pypi.org/project/patchlab/
# gitlab_hostname: hostname to use in python-gitlab.cfg
# gitlab_url: API URL for python-gitlab.cfg
# gitlab_project_id: Project id for the git repo being cloned
# gitlab_repo_write_token: An access token with repo write permissions
- hosts: patchlab
  become: true
  become_method: sudo
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
  roles:
    - patchlab
  tasks:
    - name: clone git repo for patchlab to bridge
      become: patchwork
      git:
        repo: "https://oauth2:{{ gitlab_repo_write_token }}@gitlab.com/cki-project/kernel-ark.git"
        dest: "/var/lib/patchlab/{{ gitlab_hostname }}-{{ gitlab_project_id }}"
