---

- import_tasks: db.yml
- import_tasks: postfix.yml
- import_tasks: rabbitmq.yml

- name: Install helpful development packages
  package: name={{ item }} state=present
  with_items:
    - avahi
    - git
    - git-email
    - vim-enhanced
    - python3-virtualenvwrapper
    - mutt
    - nss-mdns

- name: Install system dependencies for Python packages
  package: name={{ item }} state=present
  with_items:
    - gcc
    - make
    - libffi-devel
    - openssl-devel
    - postgresql-devel
    - python3-devel
    - mariadb
    - mariadb-devel

- name: Start avahi-daemon
  systemd:
    name: avahi-daemon
    state: started
    enabled: yes

# Add various helpful configuration files
- name: Install a custom bashrc
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=bashrc dest=/home/{{ ansible_env.SUDO_USER }}/.bashrc

- name: Add a basic muttrc
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=muttrc dest=/home/{{ ansible_env.SUDO_USER }}/.muttrc

- name: Install a gitconfig
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=gitconfig dest=/home/{{ ansible_env.SUDO_USER }}/.gitconfig

- name: Install the message of the day
  copy: src=motd dest=/etc/motd

- name: Create python-gitlab config
  copy:
    src: python-gitlab.cfg
    dest: /etc/python-gitlab.cfg
    mode: 0644

- git:
    repo: https://github.com/jeremycline/patchwork.git
    dest: "/home/{{ ansible_env.SUDO_USER }}/patchwork"

- name: Create virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: >
      source ~/.bashrc && mkvirtualenv --python=python3 patchlab -a ~/patchlab
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/patchlab

- name: Install development requirements into the virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    requirements: "/home/{{ ansible_env.SUDO_USER }}/patchlab/dev-requirements.txt"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/patchlab/
    virtualenv_python: python3

- name: Install Patchwork into the virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    name: "git+https://github.com/jeremycline/patchwork.git#egg=patchwork"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/patchlab/
    virtualenv_python: python3

- name: Install patchlab into the virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    name: "/home/{{ ansible_env.SUDO_USER }}/patchlab"
    extra_args: "-e"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/patchlab/
    virtualenv_python: python3

- name: Install Tox
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    name: tox
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/patchlab/
    virtualenv_python: python3

- name: Run the initial database migrations
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: >
      source ~/.bashrc && workon patchlab && ./manage.py migrate && touch ~/.database_migrated
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.database_migrated

- name: Load fixture data for default admin user and test project
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: >
      source ~/.bashrc && workon patchlab && \
      ./manage.py loaddata patchlab/tests/fixtures/db/initial_db.json && \
      touch ~/.fixtures_loaded
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.fixtures_loaded

- name: Create user systemd directory
  become_user: "{{ ansible_env.SUDO_USER }}"
  file:
    path: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/
    state: directory

- name: Install the systemd service files
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy:
    src: "{{ item }}"
    dest: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/
  with_items:
    - patchwork.service
    - celery-worker@.service

- name: Start the Patchwork development server
  become_user: "{{ ansible_env.SUDO_USER }}"
  systemd:
    name: patchwork.service
    state: started
    enabled: yes
    scope: user
    daemon_reload: yes

- name: Start two celery workers
  become_user: "{{ ansible_env.SUDO_USER }}"
  systemd:
    name: "celery-worker@{{ item }}.service"
    state: started
    enabled: yes
    scope: user
    daemon_reload: yes
  with_items:
    - "1"
    - "2"

- name: Create patchlab repo directory
  file:
    path: /var/lib/patchlab
    state: directory
    owner: vagrant
    group: vagrant

- name: Clone test repo
  become_user: "{{ ansible_env.SUDO_USER }}"
  git:
    repo: https://oauth2:xTzqx9yQzAJtaj-sG8yJ@gitlab/root/patchlab_test.git
    dest: /var/lib/patchlab/gitlab-1
  environment:
    GIT_SSL_NO_VERIFY: "false"
